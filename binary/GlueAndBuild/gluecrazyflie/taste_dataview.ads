-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
USE adaasn1rtl;
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
--# inherit ;


PACKAGE TASTE_Dataview with SPARK_Mode
IS


SUBTYPE asn1SccTASTE_Boolean is adaasn1rtl.Asn1Boolean;


function asn1SccTASTE_Boolean_Equal(val1, val2: in asn1SccTASTE_Boolean) return Boolean;

function asn1SccTASTE_Boolean_Init return asn1SccTASTE_Boolean;

ERR_TASTE_BOOLEAN:CONSTANT INTEGER := 36; -- 
FUNCTION asn1SccTASTE_Boolean_IsConstraintValid(val : in asn1SccTASTE_Boolean) return adaasn1rtl.ASN1_RESULT;
SUBTYPE asn1SccMyInteger is adaasn1rtl.Asn1UInt range 0 .. 255;


function asn1SccMyInteger_Equal(val1, val2: in asn1SccMyInteger) return Boolean;

function asn1SccMyInteger_Init return asn1SccMyInteger;

ERR_MYINTEGER:CONSTANT INTEGER := 43; -- 
FUNCTION asn1SccMyInteger_IsConstraintValid(val : in asn1SccMyInteger) return adaasn1rtl.ASN1_RESULT;
SUBTYPE asn1SccT_Uint16 is adaasn1rtl.Asn1UInt range 0 .. 65535;


function asn1SccT_Uint16_Equal(val1, val2: in asn1SccT_Uint16) return Boolean;

function asn1SccT_Uint16_Init return asn1SccT_Uint16;

ERR_T_UINT16:CONSTANT INTEGER := 50; -- 
FUNCTION asn1SccT_Uint16_IsConstraintValid(val : in asn1SccT_Uint16) return adaasn1rtl.ASN1_RESULT;

 

private
   --# hide TASTE_Dataview;


END TASTE_Dataview;